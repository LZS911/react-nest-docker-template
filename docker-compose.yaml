version: '3.9'
services:
  frontend:
    container_name: frontend
    build:
      context: ./
      dockerfile: ./packages/frontend/Dockerfile.local
    restart: always
    env_file: .env
    ports:
      - '${FRONTEND_PORT}:${FRONTEND_PORT}'
    volumes:
      - .:/projects
    networks:
      bp-network:
        ipv4_address: 172.25.0.3
  backend:
    container_name: backend
    build:
      context: ./
      dockerfile: ./packages/backend/Dockerfile.local
    restart: always
    env_file: .env
    volumes:
      - .:/projects
    networks:
      bp-network:
        ipv4_address: 172.25.0.2
    ports:
      - '${BACKEND_PORT}:${BACKEND_PORT}'
    depends_on:
      - bp-pg-db
    links:
      - bp-pg-db
  bp-pg-db:
    image: postgres:12-alpine
    restart: always
    container_name: bp-pg-db
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: /var/lib/postgresql/data
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - '${DB_PORT}:${DB_PORT}'
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      bp-network:
        ipv4_address: 172.25.0.5
  pgadmin-portal:
    image: dpage/pgadmin4
    restart: always
    container_name: pgadmin-portal
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_PASSWORD: '${PGADMIN_DEFAULT_PASSWORD}'
      PGADMIN_DEFAULT_EMAIL: '${PGADMIN_DEFAULT_EMAIL}'
    volumes:
      - pgadmin:/root/.pgadmin
    ports:
      - '${PGADMIN_PORT}:80'
    depends_on:
      - bp-pg-db
    networks:
      bp-network:
        ipv4_address: 172.25.0.6
volumes:
  pgdata:
  pgadmin:
networks:
  bp-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16
